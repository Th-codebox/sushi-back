<?php


namespace App\Repositories\System;

use App\Models\System\CookingSchedule as CookingScheduleModel;
use App\Repositories\BaseRepository;
use Illuminate\Database\Eloquent\Builder;

/**
 * Class UserRepository
 * @package App\Repositories\System
 * @method CookingScheduleModel getModel()
 */
class CookingScheduleRepository extends BaseRepository
{
    protected array $relations = ['order'];

    /**
     * CookingScheduleRepository constructor.
     * @param CookingScheduleModel|null $model
     */
    public function __construct(CookingScheduleModel $model = null)
    {

        if ($model === null) {
            $model = new CookingScheduleModel();
        }

        parent::__construct($model);
    }

    protected function afterModification(array $data = []): void
    {

    }


    protected function conditionsBuilder(array $conditions = []): Builder
    {
        $query = parent::conditionsBuilder($conditions); // TODO: Change the autogenerated stub


        if (array_key_exists('filialId', $conditions) && is_numeric($conditions['filialId'])) {
            $query->whereHas('order', function (Builder $builder) use ($conditions) {
                $builder->where('filial_id', '=', $conditions['filialId']);
            });
        }


        if (array_key_exists('orderStatus', $conditions) && is_string($conditions['orderStatus'])) {
            $query->whereHas('order', function (Builder $builder) use ($conditions) {
                $builder->where('order_status', '=', $conditions['orderStatus']);
            });
        }

        if (array_key_exists('orderId', $conditions) && is_numeric($conditions['orderId'])) {
            $query->where('order_id', '=', $conditions['orderId']);
        }

        if (array_key_exists('coldIsCompleted', $conditions) && !is_array($conditions['coldIsCompleted'])) {
            $query->where('cold_is_completed', '=', $conditions['coldIsCompleted']);
        }
        if (array_key_exists('hotIsCompleted', $conditions) && !is_array($conditions['hotIsCompleted'])) {
            $query->where('hot_is_completed', '=', $conditions['hotIsCompleted']);
        }
        if (array_key_exists('assemblyIsCompleted', $conditions) && !is_array($conditions['assemblyIsCompleted'])) {
            $query->where('assembly_is_completed', '=', $conditions['assemblyIsCompleted']);
        }
        if (array_key_exists('timeBeginAssembly', $conditions) && !is_array($conditions['timeBeginAssembly'])) {
            $query->where('time_begin_assembly', '=', $conditions['timeBeginAssembly']);
        }
        return $query;
    }
}
