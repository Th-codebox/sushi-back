<?php


namespace App\Repositories\Store;


use App\Models\Store\ModificationMenuItem;
use App\Repositories\BaseRepository;
use Illuminate\Database\Eloquent\Builder;

/**
 * Class ModificationMenuItemRepository
 * @package App\Repositories\Store
 * @method ModificationMenuItem getModel()
 */
class ModificationMenuItemRepository extends BaseRepository
{

    protected array $relations = ['menuItem', 'modification'];

    /**
     * ModificationMenuItemRepository constructor.
     * @param ModificationMenuItem|null $model
     */
    public function __construct(ModificationMenuItem $model = null)
    {
        parent::__construct($model);
    }

    /**
     * @param array $data
     */
    protected function afterModification(array $data = []): void
    {
    }

    protected function conditionsBuilder(array $conditions = []): Builder
    {
        $builder = parent::conditionsBuilder($conditions); // TODO: Change the autogenerated stub

        if (array_key_exists('menuItemId', $conditions) && is_numeric($conditions['menuItemId'])) {
            $builder->where('menu_item_id', '=', $conditions['menuItemId']);
        } elseif (array_key_exists('menuItemId', $conditions) && is_array($conditions['menuItemId'])) {
            $builder->whereIn('menu_item_id',  $conditions['menuItemId']);
        }

        if (array_key_exists('modificationId', $conditions) && is_numeric($conditions['modificationId'])) {
            $builder->where('modification_id', '=', $conditions['modificationId']);
        } elseif (array_key_exists('modificationId', $conditions) && is_array($conditions['modificationId'])) {
            $builder->whereIn('modification_id',  $conditions['modificationId']);
        }

        return $builder;
    }
}
