<?php


namespace App\Services\CRM\System;


use App\Repositories\System\UserRepository;
use App\Services\CRM\CRMBaseService;

/**
 * Class UserService
 * @package App\Service\System
 *
 * @method UserRepository getRepository()
 */
class UserService extends CRMBaseService
{
    /**
     * UserService constructor.
     * @param UserRepository|null $repository
     * @throws \ReflectionException
     */
    public function __construct(?UserRepository $repository = null)
    {
        parent::__construct($repository);
    }

    protected function dataCorrection(array $data)
    {
        $data = parent::dataCorrection($data); // TODO: Change the autogenerated stub

        if (array_key_exists('password', $data) && $data['password']) {
            $data['password'] = bcrypt($data['password']);
        }
        if (array_key_exists('phone', $data) && $data['phone']) {
            $data['phone'] = preg_replace('/\D*/', '',  $data['phone']);
            if (substr( $data['phone'],0,1) == 8)   {
                $data['phone'][0] = 7;
            }
        }

        return $data;
    }

    /**
     * @return array
     */
    public function mapPermissions()
    {
        return $this->getRepository()->mapPermissions();
    }

    /**
     * @return array
     */
    public function mapFilials()
    {
        return $this->getRepository()->mapFilials();
    }

    /**
     * @return array
     */
    public function getRole()
    {
        return $this->getRepository()->mapRole();
    }

    /**
     *
     */
    public function calcBalance()
    {
        $this->getRepository()->calcBalance();
    }
}
